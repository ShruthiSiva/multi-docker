# lecture 133
# we're using nginx to route requests from browser to either the client or server service. 
# we're telling nginx (which we're using for routing in this case) that there is an upstream called # client that is serving content at port 3000.
upstream client {
    server client:3000;
}

# upstream server {
#     server server:5000;
# }
# instead of specifying the server service config as above (nginx gets confused since server is a protected keyword), we're renaming it in the docker-compose file and here so it's clearer to nginx
upstream api {
    server api:5000;
}

# we want to expose nginx's port 80 so it can listen for requests there.
server {
    listen 80;

# if any request comes in to "/", set up a proxy and pass the request over to the client upstream.
    location / {
        proxy_pass http://client;
    }

    location /api {
        # for a request like /api/values/all, remove the /api bit and just pass /values/all.
        rewrite /api/(.*) /$1 break;
        proxy_pass http://api;
    }

    location /ws {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
}